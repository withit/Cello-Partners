%h2 
  Article Management : 
  %span Edit Article
%h3 
  Template Option
  = @article_template.id  
%p This template should be used for simple text only document layouts where page breaks and paragraph breaks are the only forms of formating required. The templates are designed to take these simple commands and convert them into the appropriate HTML tags for you. Adding additional HTML tags to this template may produce some unexpected results and is not advised.

- form_for @article, :url => template_articles_path(@article_template),:html => {:multipart => true} do |f|
  %table
    %tr
      %th{:colspan => 2} Article Details
    %tr.odd
      %td Headline
      %td= f.text_field :title
    %tr.even
      %td Summary
      %td= f.text_area :abstract
    = template_fields @article_template, :f => f
    %tr.odd 
      %td
        %label Section Name
        %p Please select the section(s) of the site you wish this article to appear in the News.
      %td
        = f.collection_select :section_ids, Section.all, :id, :Name, {}, :multiple => true
    %tr.even
      %td Article Visibility 
      %td= f.select :published, [['Visible',1],['Not Visible', 0]]
    %tr.odd
      %td Author
      %td= @article.author_name
  %fieldset#keywords
    %h4 Keywords
    %p Keywords 1 to 3 are used to find related documents. Please ensure that the three most relevant keywords are in the first three fields.
    %table
      %tr
        - (1..8).to_a.in_groups_of(4, false) do |row|
          %td
            %ul
              - row.each do |keyword_count|
                %li
                  %label= "Keyword #{keyword_count}"
                  = f.text_field "keyword_#{keyword_count}"
  %fieldset#related-information
    %h4 Related Information
    %p The server documents and website likes below will appear under 'Related Information' section next to the article.
    %p Server Documents
    %p Documents to be linked to this article:
    %table
      %tr
        %th File
        %th File Name
        %th File Type
        %th Delete
      - @article.documents.each do |document|
        %tr
          %td= link_to 'View Document', '#'
          %td= document.filename
          %td= document.filetype
          %td= check_box_tag 'article[document_ids_to_delete][]', document.id
      -  4.times do |i|
        - fields_for :"article[new_document_attributes][]", Article::Document.new do |document_form|
          %tr.upload
            %td= document_form.file_field :file, :index => nil
            %td= document_form.text_field :filename, :index => nil
            %td= document_form.select :filetype, Article::Document::FORMATS, {:prompt => 'Please select'}, :index => nil
  %fieldset#web-pages
    %h4 Web Pages
    %p Please detail any web pages you wish to be linked to this article?
    %table
      %tr
        %th 
        %th Link Name
        %th URL
        %th Target
      - @article.links.each_with_index do |link, i|
        - fields_for  :"article[link_attributes][]", link do |article_form|
          %tr
            %td= i + 1
            %td= article_form.text_field :label, :index => nil
            %td= article_form.text_field :url, :index => nil
            %td= article_form.select :target, Article::Link::TARGETS,{:include_blank => true}, :index => nil
      - 1.upto(4) do |i|
        - fields_for :"article[link_attributes][]", Article::Link.new do |article_form|
          %tr
            %td= i
            %td= article_form.text_field :label, :index => nil
            %td= article_form.text_field :url, :index => nil
            %td= article_form.select :target, Article::Link::TARGETS,{:include_blank => true}, :index => nil
  = f.submit 'Save Article'
